{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  className: \"Auth-form\"\n};\nconst _hoisted_2 = {\n  className: \"Auth-form-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  className: \"Auth-form-title\"\n}, \"Đăng nhập\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  className: \"form-group mt-3\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", null, \"Tài khoản\"), /*#__PURE__*/_createElementVNode(\"input\", {\n  required: \"\",\n  value: \"{username}\",\n  type: \"text\",\n  className: \"form-control mt-1\",\n  placeholder: \"Nhập tài khoản\"\n})], -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  className: \"form-group mt-3\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", null, \"Mật khẩu\"), /*#__PURE__*/_createElementVNode(\"input\", {\n  required: \"\",\n  value: \"{password}\",\n  type: \"password\",\n  className: \"form-control mt-1\",\n  placeholder: \"Nhập mật khẩu\"\n})], -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  className: \"d-grid gap-2 mt-3\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  className: \"btn btn-primary\"\n}, \" Đăng nhập \")], -1 /* HOISTED */);\nconst _hoisted_7 = {\n  className: \"login text-right mt-2\"\n};\nconst _hoisted_8 = {\n  className: \"forgot-password\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Link = _resolveComponent(\"Link\");\n  const _component_Form = _resolveComponent(\"Form\");\n  return _openBlock(), _createBlock(_component_Form, {\n    onSubmit: $options.handleLogin,\n    className: \"Auth-form-container\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _hoisted_5, _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createTextVNode(\" Quên \"), _createVNode(_component_Link, {\n      to: \"#\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"mật khẩu?\")]),\n      _: 1 /* STABLE */\n    })])])])])]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onSubmit\"]);\n}","map":{"version":3,"names":["className","_createElementVNode","required","value","type","placeholder","_createBlock","_component_Form","onSubmit","$options","handleLogin","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_createVNode","_component_Link","to"],"sources":["D:\\university\\src\\layouts\\login.vue"],"sourcesContent":["<template>\r\n    <Form @submit=\"handleLogin\" className=\"Auth-form-container\">\r\n        <div className=\"Auth-form\">\r\n            <div className=\"Auth-form-content\">\r\n                <h3 className=\"Auth-form-title\">Đăng nhập</h3>\r\n                <div className=\"form-group mt-3\">\r\n                    <label>Tài khoản</label>\r\n                    <input required value={username} type=\"text\" className=\"form-control mt-1\"\r\n                        placeholder=\"Nhập tài khoản\" />\r\n                </div>\r\n                <div className=\"form-group mt-3\">\r\n                    <label>Mật khẩu</label>\r\n                    <input required value={password} type=\"password\" className=\"form-control mt-1\"\r\n                        placeholder=\"Nhập mật khẩu\" />\r\n                </div>\r\n                <div className=\"d-grid gap-2 mt-3\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Đăng nhập\r\n                    </button>\r\n                </div>\r\n                <div className=\"login text-right mt-2\">\r\n                    <div className=\"forgot-password\">\r\n                        Quên\r\n                        <Link to=\"#\">mật khẩu?</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Form>\r\n</template>\r\n\r\n<script>\r\n    import { ref } from 'vue';\r\n    import { useRouter } from 'vue-router'; // Import router nếu bạn sử dụng Vue Router\r\n    import Apis, {endpoints} from '../configs/Apis.js';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                username: '',\r\n                password: '',\r\n            };\r\n        },\r\n        methods: {\r\n            async handleLogin() {\r\n                try {\r\n                    // Gọi API đăng nhập bằng Axios\r\n                    const response = await Apis.post(endpoints.login, {\r\n                        username: this.username,\r\n                        password: this.password,\r\n                    });\r\n\r\n                    // Kiểm tra nếu đăng nhập thành công (dựa vào phản hồi từ API)\r\n                    if (response.data && response.data.token) {\r\n                        // Lưu token vào cookie (sử dụng vue-cookies hoặc phương thức khác)\r\n                        VueCookies.set(\"token\", response.data.token);\r\n\r\n                        // Gọi API để lấy thông tin người dùng hiện tại (nếu cần)\r\n                        const { data } = await authApi().get(endpoints.currentUser);\r\n\r\n                        // Lưu thông tin người dùng vào cookie (nếu cần)\r\n                        VueCookies.set(\"user\", JSON.stringify(data));\r\n\r\n                        // Cập nhật trạng thái đăng nhập (nếu bạn sử dụng Vuex)\r\n                        // this.$store.commit('login', data);\r\n\r\n                        // Chuyển hướng sau khi đăng nhập thành công (sử dụng Vue Router)\r\n                        this.$router.push('/'); // Chuyển hướng đến trang chính\r\n                    } else {\r\n                        // Xử lý khi đăng nhập không thành công (ví dụ: hiển thị thông báo lỗi)\r\n                        console.error('Đăng nhập không thành công');\r\n                    }\r\n                } catch (error) {\r\n                    // Xử lý lỗi khi gọi API đăng nhập\r\n                    console.error('Lỗi đăng nhập:', error);\r\n                }\r\n            },\r\n        },\r\n\r\n    };\r\n</script>"],"mappings":";;EAEaA,SAAS,EAAC;AAAW;;EACjBA,SAAS,EAAC;AAAmB;gCAC9BC,mBAAA,CAA8C;EAA1CD,SAAS,EAAC;AAAiB,GAAC,WAAS;gCACzCC,mBAAA,CAIM;EAJDD,SAAS,EAAC;AAAiB,I,aAC5BC,mBAAA,CAAwB,eAAjB,WAAS,G,aAChBA,mBAAA,CACmC;EAD5BC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC,YAAU;EAACC,IAAI,EAAC,MAAM;EAACJ,SAAS,EAAC,mBAAmB;EACtEK,WAAW,EAAC;;gCAEpBJ,mBAAA,CAIM;EAJDD,SAAS,EAAC;AAAiB,I,aAC5BC,mBAAA,CAAuB,eAAhB,UAAQ,G,aACfA,mBAAA,CACkC;EAD3BC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC,YAAU;EAACC,IAAI,EAAC,UAAU;EAACJ,SAAS,EAAC,mBAAmB;EAC1EK,WAAW,EAAC;;gCAEpBJ,mBAAA,CAIM;EAJDD,SAAS,EAAC;AAAmB,I,aAC9BC,mBAAA,CAES;EAFDG,IAAI,EAAC,QAAQ;EAACJ,SAAS,EAAC;GAAkB,aAElD,E;;EAECA,SAAS,EAAC;AAAuB;;EAC7BA,SAAS,EAAC;AAAiB;;;;uBApBhDM,YAAA,CA2BOC,eAAA;IA3BAC,QAAM,EAAEC,QAAA,CAAAC,WAAW;IAAEV,SAAS,EAAC;;sBAClC,MAyBM,CAzBNC,mBAAA,CAyBM,OAzBNU,UAyBM,GAxBFV,mBAAA,CAuBM,OAvBNW,UAuBM,GAtBFC,UAA8C,EAC9CC,UAIM,EACNC,UAIM,EACNC,UAIM,EACNf,mBAAA,CAKM,OALNgB,UAKM,GAJFhB,mBAAA,CAGM,OAHNiB,UAGM,G,iBAH2B,QAE7B,GAAAC,YAAA,CAA6BC,eAAA;MAAvBC,EAAE,EAAC;IAAG;wBAAC,MAAS,C,iBAAT,WAAS,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}