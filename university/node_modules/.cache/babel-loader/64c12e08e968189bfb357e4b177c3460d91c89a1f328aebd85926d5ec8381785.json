{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Apis, { authApi } from \"@/configs/Apis.js\";\nimport { endpoints } from \"@/configs/Apis.js\";\nimport cookie from \"vue-cookies\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"Login\",\n  computed: {\n    ...mapState([\"myState\"])\n  },\n  data() {\n    return {\n      user: {\n        username: \"\",\n        password: \"\"\n      },\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const res = await Apis.post(`${endpoints[\"login\"]}`, {\n          username: this.user.username,\n          password: this.user.password\n        });\n        if (res.data === \"error\") {\n          this.errorMessage = \"Tài khoản hoặc mật khẩu của bạn không đúng!!\";\n        } else {\n          this.errorMessage = \"\";\n          cookie.set(\"token\", res.data);\n          let {\n            data\n          } = await authApi().get(endpoints[\"Current_user\"]);\n          cookie.set(\"user\", data);\n          await this.$store.dispatch(\"login\", data);\n          this.$router.push({\n            name: \"home\"\n          });\n        }\n      } catch (error) {\n        throw error;\n      }\n    }\n  },\n  watch: {\n    \"errorMessage\": function (newErrorMessage, oldErrorMessage) {\n      console.log(`Giá trị mới của user.errorMessage: ${newErrorMessage}`);\n      console.log(`Giá trị cũ của user.errorMessage: ${oldErrorMessage}`);\n\n      // Thực hiện các hành động khác tại đây nếu cần\n    }\n  }\n};\n\n// import { ref } from 'vue';\n// import { useRouter } from 'vue-router';\n// import Apis, { endpoints, authApi } from '../configs/Apis.js';\n// import VueCookies from 'vue-cookies';\n// import { login } from '../reducers/myUseReducer.js';\n// import axios from 'axios';\n\n// export default {\n//     setup() {\n//         const username = ref('');\n//         const password = ref('');\n//         const err = ref(false);\n//         const router = useRouter();\n//         const token = ref(null);\n//         const user = ref(null);\n//         let hasLoggedIn = false;\n\n//         const login = async () => {\n//             try {\n//                 if (hasLoggedIn) {\n//                     let res = await Apis.post(endpoints.login, {\n//                         username: username.value,\n//                         password: password.value\n//                     });\n//                     console.log(res);\n//                     // Lưu token vào cookie tại đây nếu cần\n//                     VueCookies.set('token', res.data);\n\n//                     let { data } = await authApi().get(endpoints['current-user']);\n//                     console.log(\"curent user\", data);\n//                     // Lưu thông tin người dùng vào cookie tại đây nếu cần\n//                     // Hàm để lưu token vào cookie\n//                     VueCookies.set('user', JSON.stringify(res.data));\n//                     login(res.data);\n\n//                     if (res.data.role == 'ROLE_GIANGVIEN') {\n//                         router.push('/teacher')\n//                     } else {\n//                         router.push('/student')\n//                     }\n\n//                     try {\n//                         const u = await getUserByUsername(username.value);\n//                         if (u) {\n//                             const studentUsername = u.username;\n\n//                             // Fetch thông tin của học sinh\n//                             const studentInfo = await authApi().get(endpoints['get-student-by-username'].replace(\"{username}\", studentUsername));\n\n//                             const userEmail = u.email; // Lấy email của người dùng (nếu bạn cần)\n\n//                             // Thực hiện các tác vụ cần thiết (ví dụ: đăng nhập)\n//                             // Chuyển hướng sau khi đăng nhập thành công\n//                             if (res.data.role == 'ROLE_GIANGVIEN') {\n//                                 router.push('/teacher/')\n//                             } else {\n//                                 router.push('/student/')\n//                             }\n//                         } else {\n//                             console.log('User not found');\n//                             err.value = true;\n//                         }\n//                     } catch (err) {\n//                         err.value = true;\n//                     }\n//                 }\n//                 hasLoggedIn = true;\n//             } catch (err) {\n//                 console.error(err);\n//                 err.value = true;\n//             }\n//         };\n\n//         const getUserByUsername = async (username) => {\n//             try {\n//                 const response = await Apis.get(endpoints[\"get-user\"].replace(\"{username}\", username));\n//                 return response.data;\n//             } catch (error) {\n//                 console.error(error);\n//                 return null; // Hoặc xử lý lỗi theo cách bạn muốn\n//             }\n//         };\n\n//         return {\n//             username,\n//             password,\n//             err,\n//             login\n//         };\n//     }\n// };","map":{"version":3,"names":["Apis","authApi","endpoints","cookie","mapState","name","computed","data","user","username","password","errorMessage","methods","login","res","post","set","get","$store","dispatch","$router","push","error","watch","newErrorMessage","oldErrorMessage","console","log"],"sources":["D:\\university\\src\\layouts\\login.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <form @submit.prevent=\"login\" class=\"Auth-form-container\">\r\n            <div class=\"Auth-form\">\r\n                <div v-if=\"err\" class=\"alert alert-danger\">\r\n                    Tên người dùng hoặc mật khẩu không chính xác. Vui lòng thử lại.\r\n                </div>\r\n                <div class=\"Auth-form-content\">\r\n                    <h3 class=\"Auth-form-title\">Đăng nhập</h3>\r\n                    <div class=\"form-group mt-3\">\r\n                        <label>Tài khoản</label>\r\n                        <input required v-model=\"username\" type=\"text\" class=\"form-control mt-1\"\r\n                            placeholder=\"Nhập tài khoản\" />\r\n                    </div>\r\n                    <div class=\"form-group mt-3\">\r\n                        <label>Mật khẩu</label>\r\n                        <input required v-model=\"password\" type=\"password\" class=\"form-control mt-1\"\r\n                            placeholder=\"Nhập mật khẩu\" />\r\n                    </div>\r\n                    <div class=\"d-grid gap-2 mt-3\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Đăng nhập</button>\r\n                    </div>\r\n                    <div class=\"login text-right mt-2\">\r\n                        <div class=\"forgot-password\">\r\n                            Quên <router-link to=\"#\">mật khẩu?</router-link>\r\n                        </div>\r\n                        <div class=\"register-link\">\r\n                            <router-link to=\"/register\">Đăng ký</router-link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import Apis, { authApi } from \"@/configs/Apis.js\";\r\n    import { endpoints } from \"@/configs/Apis.js\";\r\n    import cookie from \"vue-cookies\";\r\n    import { mapState } from \"vuex\";\r\n\r\n    export default {\r\n        name: \"Login\",\r\n        computed: {\r\n            ...mapState([\"myState\"]),\r\n        },\r\n        data() {\r\n            return {\r\n                user: {\r\n                    username: \"\",\r\n                    password: \"\",\r\n                },\r\n                errorMessage: \"\",\r\n            };\r\n        },\r\n        methods: {\r\n            async login() {\r\n                try {\r\n                    const res = await Apis.post(`${endpoints[\"login\"]}`, {\r\n                        username: this.user.username,\r\n                        password: this.user.password,\r\n                    });\r\n                    if (res.data === \"error\") {\r\n                        this.errorMessage =\r\n                            \"Tài khoản hoặc mật khẩu của bạn không đúng!!\";\r\n                    } else {\r\n                        this.errorMessage = \"\";\r\n                        cookie.set(\"token\", res.data);\r\n\r\n                        let { data } = await authApi().get(endpoints[\"Current_user\"]);\r\n                        cookie.set(\"user\", data);\r\n\r\n                        await this.$store.dispatch(\"login\", data);\r\n\r\n                        this.$router.push({ name: \"home\" });\r\n                    }\r\n                } catch (error) {\r\n                    throw error;\r\n                }\r\n            },\r\n        },\r\n        watch: {\r\n            \"errorMessage\": function (newErrorMessage, oldErrorMessage) {\r\n                console.log(`Giá trị mới của user.errorMessage: ${newErrorMessage}`);\r\n                console.log(`Giá trị cũ của user.errorMessage: ${oldErrorMessage}`);\r\n\r\n                // Thực hiện các hành động khác tại đây nếu cần\r\n            },\r\n        },\r\n    };\r\n\r\n    // import { ref } from 'vue';\r\n    // import { useRouter } from 'vue-router';\r\n    // import Apis, { endpoints, authApi } from '../configs/Apis.js';\r\n    // import VueCookies from 'vue-cookies';\r\n    // import { login } from '../reducers/myUseReducer.js';\r\n    // import axios from 'axios';\r\n\r\n    // export default {\r\n    //     setup() {\r\n    //         const username = ref('');\r\n    //         const password = ref('');\r\n    //         const err = ref(false);\r\n    //         const router = useRouter();\r\n    //         const token = ref(null);\r\n    //         const user = ref(null);\r\n    //         let hasLoggedIn = false;\r\n\r\n    //         const login = async () => {\r\n    //             try {\r\n    //                 if (hasLoggedIn) {\r\n    //                     let res = await Apis.post(endpoints.login, {\r\n    //                         username: username.value,\r\n    //                         password: password.value\r\n    //                     });\r\n    //                     console.log(res);\r\n    //                     // Lưu token vào cookie tại đây nếu cần\r\n    //                     VueCookies.set('token', res.data);\r\n\r\n    //                     let { data } = await authApi().get(endpoints['current-user']);\r\n    //                     console.log(\"curent user\", data);\r\n    //                     // Lưu thông tin người dùng vào cookie tại đây nếu cần\r\n    //                     // Hàm để lưu token vào cookie\r\n    //                     VueCookies.set('user', JSON.stringify(res.data));\r\n    //                     login(res.data);\r\n\r\n    //                     if (res.data.role == 'ROLE_GIANGVIEN') {\r\n    //                         router.push('/teacher')\r\n    //                     } else {\r\n    //                         router.push('/student')\r\n    //                     }\r\n\r\n\r\n    //                     try {\r\n    //                         const u = await getUserByUsername(username.value);\r\n    //                         if (u) {\r\n    //                             const studentUsername = u.username;\r\n\r\n    //                             // Fetch thông tin của học sinh\r\n    //                             const studentInfo = await authApi().get(endpoints['get-student-by-username'].replace(\"{username}\", studentUsername));\r\n\r\n    //                             const userEmail = u.email; // Lấy email của người dùng (nếu bạn cần)\r\n\r\n    //                             // Thực hiện các tác vụ cần thiết (ví dụ: đăng nhập)\r\n    //                             // Chuyển hướng sau khi đăng nhập thành công\r\n    //                             if (res.data.role == 'ROLE_GIANGVIEN') {\r\n    //                                 router.push('/teacher/')\r\n    //                             } else {\r\n    //                                 router.push('/student/')\r\n    //                             }\r\n    //                         } else {\r\n    //                             console.log('User not found');\r\n    //                             err.value = true;\r\n    //                         }\r\n    //                     } catch (err) {\r\n    //                         err.value = true;\r\n    //                     }\r\n    //                 }\r\n    //                 hasLoggedIn = true;\r\n    //             } catch (err) {\r\n    //                 console.error(err);\r\n    //                 err.value = true;\r\n    //             }\r\n    //         };\r\n\r\n    //         const getUserByUsername = async (username) => {\r\n    //             try {\r\n    //                 const response = await Apis.get(endpoints[\"get-user\"].replace(\"{username}\", username));\r\n    //                 return response.data;\r\n    //             } catch (error) {\r\n    //                 console.error(error);\r\n    //                 return null; // Hoặc xử lý lỗi theo cách bạn muốn\r\n    //             }\r\n    //         };\r\n\r\n    //         return {\r\n    //             username,\r\n    //             password,\r\n    //             err,\r\n    //             login\r\n    //         };\r\n    //     }\r\n    // };\r\n</script>\r\n\r\n<style scoped>\r\n    /* CSS cho component của bạn */\r\n</style>"],"mappings":";AAsCI,OAAOA,IAAI,IAAIC,OAAM,QAAS,mBAAmB;AACjD,SAASC,SAAQ,QAAS,mBAAmB;AAC7C,OAAOC,MAAK,MAAO,aAAa;AAChC,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE;IACN,GAAGF,QAAQ,CAAC,CAAC,SAAS,CAAC;EAC3B,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACd,CAAC;MACDC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,KAAKA,CAAA,EAAG;MACV,IAAI;QACA,MAAMC,GAAE,GAAI,MAAMd,IAAI,CAACe,IAAI,CAAE,GAAEb,SAAS,CAAC,OAAO,CAAE,EAAC,EAAE;UACjDO,QAAQ,EAAE,IAAI,CAACD,IAAI,CAACC,QAAQ;UAC5BC,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE;QACxB,CAAC,CAAC;QACF,IAAII,GAAG,CAACP,IAAG,KAAM,OAAO,EAAE;UACtB,IAAI,CAACI,YAAW,GACZ,8CAA8C;QACtD,OAAO;UACH,IAAI,CAACA,YAAW,GAAI,EAAE;UACtBR,MAAM,CAACa,GAAG,CAAC,OAAO,EAAEF,GAAG,CAACP,IAAI,CAAC;UAE7B,IAAI;YAAEA;UAAK,IAAI,MAAMN,OAAO,CAAC,CAAC,CAACgB,GAAG,CAACf,SAAS,CAAC,cAAc,CAAC,CAAC;UAC7DC,MAAM,CAACa,GAAG,CAAC,MAAM,EAAET,IAAI,CAAC;UAExB,MAAM,IAAI,CAACW,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAEZ,IAAI,CAAC;UAEzC,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC;YAAEhB,IAAI,EAAE;UAAO,CAAC,CAAC;QACvC;MACJ,EAAE,OAAOiB,KAAK,EAAE;QACZ,MAAMA,KAAK;MACf;IACJ;EACJ,CAAC;EACDC,KAAK,EAAE;IACH,cAAc,EAAE,SAAAZ,CAAUa,eAAe,EAAEC,eAAe,EAAE;MACxDC,OAAO,CAACC,GAAG,CAAE,sCAAqCH,eAAgB,EAAC,CAAC;MACpEE,OAAO,CAACC,GAAG,CAAE,qCAAoCF,eAAgB,EAAC,CAAC;;MAEnE;IACJ;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}