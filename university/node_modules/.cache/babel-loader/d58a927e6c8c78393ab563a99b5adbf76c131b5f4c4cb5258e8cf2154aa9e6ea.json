{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"table col-12\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"table\"\n}, [/*#__PURE__*/_createCommentVNode(\" <template v-if=\\\"studentList.length > 0\\\" >\\r\\n        <table class=\\\"table table-striped table-bordered table-hover\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th style=\\\"text-align: center\\\">Mã số sinh viên</th>\\r\\n              <th style=\\\"text-align: center\\\">Tên sinh viên</th>\\r\\n              <th style=\\\"text-align: center\\\">Ngày sinh</th>\\r\\n              <th style=\\\"text-align: center\\\">Giới tính</th>\\r\\n              <th style=\\\"text-align: center\\\">Số điện thoại</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr v-for=\\\"student in studentList\\\" :key=\\\"student.id\\\">\\r\\n              <td style=\\\"text-align: center\\\">{{ student.id }}</td>\\r\\n              <td style=\\\"text-align: center\\\">{{ student.name }}</td>\\r\\n              <td style=\\\"text-align: center\\\">\\r\\n                {{ formatDate(student.birthday) }}\\r\\n              </td>\\r\\n              <td style=\\\"text-align: center\\\">\\r\\n                {{ student.gender === 1 ? \\\"Nam\\\" : \\\"Nữ\\\" }}\\r\\n              </td>\\r\\n              <td style=\\\"text-align: center\\\">{{ student.phone }}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </template>\\r\\n      <template v-else>\\r\\n        <div class=\\\"text-hr-teacher\\\">Không có lớp chủ nhiệm</div>\\r\\n      </template> \")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, \"Lớp: \" + _toDisplayString($options.extractedId), 1 /* TEXT */), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createCommentVNode","_toDisplayString","$options","extractedId","_hoisted_1"],"sources":["D:\\university\\src\\pages\\teacher\\classStudent\\index.vue"],"sourcesContent":["<template>\r\n  <div>Lớp: {{ extractedId }}</div>\r\n  <div class=\"table col-12\">\r\n    <div class=\"table\">\r\n      <!-- <template v-if=\"studentList.length > 0\" >\r\n        <table class=\"table table-striped table-bordered table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th style=\"text-align: center\">Mã số sinh viên</th>\r\n              <th style=\"text-align: center\">Tên sinh viên</th>\r\n              <th style=\"text-align: center\">Ngày sinh</th>\r\n              <th style=\"text-align: center\">Giới tính</th>\r\n              <th style=\"text-align: center\">Số điện thoại</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"student in studentList\" :key=\"student.id\">\r\n              <td style=\"text-align: center\">{{ student.id }}</td>\r\n              <td style=\"text-align: center\">{{ student.name }}</td>\r\n              <td style=\"text-align: center\">\r\n                {{ formatDate(student.birthday) }}\r\n              </td>\r\n              <td style=\"text-align: center\">\r\n                {{ student.gender === 1 ? \"Nam\" : \"Nữ\" }}\r\n              </td>\r\n              <td style=\"text-align: center\">{{ student.phone }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </template>\r\n      <template v-else>\r\n        <div class=\"text-hr-teacher\">Không có lớp chủ nhiệm</div>\r\n      </template> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { authApi, endpoints } from \"@/configs/Apis.js\";\r\nimport { mapGetters } from \"vuex\";\r\nimport { useMenu } from \"../../../stores/use-menu.js\";\r\nexport default {\r\n   computed: {\r\n            ...mapGetters([\"isAuth\", \"getUser\"]),\r\n        },\r\n  data() {\r\n    return {\r\n      studentList: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.getStudent();\r\n  },\r\n  methods: {\r\n    async getStudent() {\r\n        console.log(this.getUser.username);\r\n      if (this.getUser && this.getUser.username) {\r\n        const lecturerUsername = this.getUser.username;\r\n        const response = await authApi().get(\r\n          endpoints[\"get-lecturer-by-username\"].replace(\r\n            \"{username}\",\r\n            lecturerUsername\r\n          )\r\n        );\r\n\r\n        console.log(response.data.id);\r\n        const listStudent = await authApi().get(\r\n          endpoints[\"student-home-room-teacher\"].replace(\r\n            \"{lecturerId}\",\r\n            response.data.id\r\n          )\r\n        );\r\n\r\n        if (listStudent.data) {\r\n          this.studentList = listStudent.data;\r\n          console.log(listStudent.data);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    extractedId() {\r\n      return this.studentList.length > 0\r\n        ? this.studentList[0].classesId?.id || \"N/A\"\r\n        : \"N/A\";\r\n    },\r\n  },\r\n  setup() {\r\n    useMenu().onSelectedKeys([\"teacher-classStudent\"]);\r\n  },\r\n};\r\n</script>"],"mappings":";gCAEEA,mBAAA,CAgCM;EAhCDC,KAAK,EAAC;AAAc,I,aACvBD,mBAAA,CA8BM;EA9BDC,KAAK,EAAC;AAAO,I,aAChBC,mBAAA,qzCA4Be,C;;;6DA/BnBF,mBAAA,CAAiC,aAA5B,OAAK,GAAAG,gBAAA,CAAGC,QAAA,CAAAC,WAAW,kBACxBC,UAgCM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}