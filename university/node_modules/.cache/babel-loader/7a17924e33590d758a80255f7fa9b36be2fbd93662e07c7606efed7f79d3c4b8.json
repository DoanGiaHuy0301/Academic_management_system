{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport Apis, { endpoints, authApi } from '../configs/Apis.js';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const username = ref('');\n    const password = ref('');\n    const err = ref(false);\n    const router = useRouter();\n    const login = async () => {\n      try {\n        let res = await Apis.post(endpoints.login, {\n          username: username.value,\n          password: password.value\n        });\n        // Lưu token vào cookie tại đây nếu cần\n\n        let {\n          data\n        } = await authApi().get(endpoints.current - user);\n        console.log(\"curent user\", data);\n        // Lưu thông tin người dùng vào cookie tại đây nếu cần\n\n        // Dispatch một action hoặc thực hiện các tác vụ khác\n\n        try {\n          const u = await getUserByUsername(username.value);\n          if (u) {\n            const studentUsername = u.username;\n\n            // Fetch thông tin của học sinh\n            const studentInfo = await Apis.get(`/api/students-lecturer/${studentUsername}`);\n            const userEmail = u.email; // Lấy email của người dùng (nếu bạn cần)\n\n            // Thực hiện các tác vụ cần thiết (ví dụ: đăng nhập)\n            // Chuyển hướng sau khi đăng nhập thành công\n            router.push('/student');\n          } else {\n            console.log('User not found');\n            err.value = true;\n          }\n        } catch (err) {\n          err.value = true;\n        }\n      } catch (err) {\n        console.error(err);\n        err.value = true;\n      }\n    };\n    const getUserByUsername = async username => {\n      try {\n        const response = await axios.get(`/api/users/${username}`);\n        return response.data;\n      } catch (error) {\n        console.error(error);\n        return null; // Hoặc xử lý lỗi theo cách bạn muốn\n      }\n    };\n\n    return {\n      username,\n      password,\n      err,\n      login\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","Apis","endpoints","authApi","axios","setup","username","password","err","router","login","res","post","value","data","get","current","user","console","log","u","getUserByUsername","studentUsername","studentInfo","userEmail","email","push","error","response"],"sources":["D:\\university\\src\\layouts\\login.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <form @submit.prevent=\"login\" class=\"Auth-form-container\">\r\n        <div class=\"Auth-form\">\r\n          <div v-if=\"err\" class=\"alert alert-danger\">\r\n            Tên người dùng hoặc mật khẩu không chính xác. Vui lòng thử lại.\r\n          </div>\r\n          <div class=\"Auth-form-content\">\r\n            <h3 class=\"Auth-form-title\">Đăng nhập</h3>\r\n            <div class=\"form-group mt-3\">\r\n              <label>Tài khoản</label>\r\n              <input\r\n                required\r\n                v-model=\"username\"\r\n                type=\"text\"\r\n                class=\"form-control mt-1\"\r\n                placeholder=\"Nhập tài khoản\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group mt-3\">\r\n              <label>Mật khẩu</label>\r\n              <input\r\n                required\r\n                v-model=\"password\"\r\n                type=\"password\"\r\n                class=\"form-control mt-1\"\r\n                placeholder=\"Nhập mật khẩu\"\r\n              />\r\n            </div>\r\n            <div class=\"d-grid gap-2 mt-3\">\r\n              <button type=\"submit\" class=\"btn btn-primary\">Đăng nhập</button>\r\n            </div>\r\n            <div class=\"login text-right mt-2\">\r\n              <div class=\"forgot-password\">\r\n                Quên <router-link to=\"#\">mật khẩu?</router-link>\r\n              </div>\r\n              <div class=\"register-link\">\r\n                <router-link to=\"/register\">Đăng ký</router-link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref } from 'vue';\r\n  import { useRouter } from 'vue-router';\r\n  import Apis, {endpoints, authApi} from '../configs/Apis.js';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    setup() {\r\n      const username = ref('');\r\n      const password = ref('');\r\n      const err = ref(false);\r\n      const router = useRouter();\r\n  \r\n      const login = async () => {\r\n        try {\r\n          let res = await Apis.post(endpoints.login, {\r\n            username: username.value,\r\n            password: password.value\r\n          });\r\n          // Lưu token vào cookie tại đây nếu cần\r\n  \r\n          let { data } = await authApi().get(endpoints.current-user);\r\n          console.log(\"curent user\", data);\r\n          // Lưu thông tin người dùng vào cookie tại đây nếu cần\r\n  \r\n          // Dispatch một action hoặc thực hiện các tác vụ khác\r\n  \r\n          try {\r\n            const u = await getUserByUsername(username.value);\r\n            if (u) {\r\n              const studentUsername = u.username;\r\n  \r\n              // Fetch thông tin của học sinh\r\n              const studentInfo = await Apis.get(`/api/students-lecturer/${studentUsername}`);\r\n  \r\n              const userEmail = u.email; // Lấy email của người dùng (nếu bạn cần)\r\n  \r\n              // Thực hiện các tác vụ cần thiết (ví dụ: đăng nhập)\r\n              // Chuyển hướng sau khi đăng nhập thành công\r\n              router.push('/student');\r\n            } else {\r\n              console.log('User not found');\r\n              err.value = true;\r\n            }\r\n          } catch (err) {\r\n            err.value = true;\r\n          }\r\n        } catch (err) {\r\n          console.error(err);\r\n          err.value = true;\r\n        }\r\n      };\r\n  \r\n      const getUserByUsername = async (username) => {\r\n        try {\r\n          const response = await axios.get(`/api/users/${username}`);\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error(error);\r\n          return null; // Hoặc xử lý lỗi theo cách bạn muốn\r\n        }\r\n      };\r\n  \r\n      return {\r\n        username,\r\n        password,\r\n        err,\r\n        login\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* CSS cho component của bạn */\r\n  </style>\r\n  "],"mappings":";AA+CE,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,IAAI,IAAGC,SAAS,EAAEC,OAAO,QAAO,oBAAoB;AAC3D,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIP,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,QAAO,GAAIR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,GAAE,GAAIT,GAAG,CAAC,KAAK,CAAC;IACtB,MAAMU,MAAK,GAAIT,SAAS,CAAC,CAAC;IAE1B,MAAMU,KAAI,GAAI,MAAAA,CAAA,KAAY;MACxB,IAAI;QACF,IAAIC,GAAE,GAAI,MAAMV,IAAI,CAACW,IAAI,CAACV,SAAS,CAACQ,KAAK,EAAE;UACzCJ,QAAQ,EAAEA,QAAQ,CAACO,KAAK;UACxBN,QAAQ,EAAEA,QAAQ,CAACM;QACrB,CAAC,CAAC;QACF;;QAEA,IAAI;UAAEC;QAAK,IAAI,MAAMX,OAAO,CAAC,CAAC,CAACY,GAAG,CAACb,SAAS,CAACc,OAAO,GAACC,IAAI,CAAC;QAC1DC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,IAAI,CAAC;QAChC;;QAEA;;QAEA,IAAI;UACF,MAAMM,CAAA,GAAI,MAAMC,iBAAiB,CAACf,QAAQ,CAACO,KAAK,CAAC;UACjD,IAAIO,CAAC,EAAE;YACL,MAAME,eAAc,GAAIF,CAAC,CAACd,QAAQ;;YAElC;YACA,MAAMiB,WAAU,GAAI,MAAMtB,IAAI,CAACc,GAAG,CAAE,0BAAyBO,eAAgB,EAAC,CAAC;YAE/E,MAAME,SAAQ,GAAIJ,CAAC,CAACK,KAAK,EAAE;;YAE3B;YACA;YACAhB,MAAM,CAACiB,IAAI,CAAC,UAAU,CAAC;UACzB,OAAO;YACLR,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;YAC7BX,GAAG,CAACK,KAAI,GAAI,IAAI;UAClB;QACF,EAAE,OAAOL,GAAG,EAAE;UACZA,GAAG,CAACK,KAAI,GAAI,IAAI;QAClB;MACF,EAAE,OAAOL,GAAG,EAAE;QACZU,OAAO,CAACS,KAAK,CAACnB,GAAG,CAAC;QAClBA,GAAG,CAACK,KAAI,GAAI,IAAI;MAClB;IACF,CAAC;IAED,MAAMQ,iBAAgB,GAAI,MAAOf,QAAQ,IAAK;MAC5C,IAAI;QACF,MAAMsB,QAAO,GAAI,MAAMxB,KAAK,CAACW,GAAG,CAAE,cAAaT,QAAS,EAAC,CAAC;QAC1D,OAAOsB,QAAQ,CAACd,IAAI;MACtB,EAAE,OAAOa,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;QACpB,OAAO,IAAI,EAAE;MACf;IACF,CAAC;;IAED,OAAO;MACLrB,QAAQ;MACRC,QAAQ;MACRC,GAAG;MACHE;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}