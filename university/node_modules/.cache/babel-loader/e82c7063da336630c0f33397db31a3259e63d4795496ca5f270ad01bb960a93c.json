{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Apis, { authApi, endpoints } from \"@/configs/Apis\";\nexport default {\n  data() {\n    return {\n      user: null,\n      usernameHost: null,\n      postId: null,\n      post: \"\",\n      comment: null,\n      content: \"\"\n    };\n  },\n  mounted() {\n    this.postId = this.$route.params.id;\n    this.loadProduct();\n    this.loadComment();\n  },\n  methods: {\n    async loadProduct() {\n      const {\n        data\n      } = await Apis.get(endpoints.details(this.postId));\n      this.post = data;\n      console.log(this.post);\n      console.log(\"this.post.title\", this.post.title);\n      console.log(\"this.post.userId.id\", this.post.userId.id);\n      this.loadUser();\n    },\n    async loadUser() {\n      const userInfo = await authApi().get(endpoints[\"user-id\"].replace(\"{id}\", this.post.userId.id));\n      this.usernameHost = userInfo.data.username;\n      console.log(\"this.usernameHost\", this.usernameHost);\n    },\n    async loadComment() {\n      const data = await authApi().get(endpoints.comments.replace(\"{id}\", this.postId));\n      this.comment = data.data;\n    },\n    async addComment() {\n      const {\n        data\n      } = await authApi().post(endpoints[\"add-comment\"], {\n        content: this.content,\n        postId: this.post.id\n      });\n      this.comment.push(data);\n      this.content = \"\";\n    },\n    formatDate(date) {\n      if (!date) return \"\"; // Tránh xử lý ngày null hoặc undefined\n\n      // Chuyển đối đối tượng ngày sang ngày\n      const formattedDate = new Date(date);\n\n      // Lấy thông tin về ngày, tháng và năm\n      const day = formattedDate.getDate();\n      const month = formattedDate.getMonth() + 1; // Lưu ý: Tháng bắt đầu từ 0\n      const year = formattedDate.getFullYear();\n\n      // Định dạng thành chuỗi \"ngày/tháng/năm\"\n      return `${day}/${month}/${year}`;\n    }\n  }\n};","map":{"version":3,"names":["Apis","authApi","endpoints","data","user","usernameHost","postId","post","comment","content","mounted","$route","params","id","loadProduct","loadComment","methods","get","details","console","log","title","userId","loadUser","userInfo","replace","username","comments","addComment","push","formatDate","date","formattedDate","Date","day","getDate","month","getMonth","year","getFullYear"],"sources":["D:\\university\\src\\pages\\teacher\\detailForum\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\" style=\"padding: 0 0 100px 0;\">\r\n    <div class=\"row\">\r\n      <div className=\"container\">\r\n        <p class=\"postDetail\">Tiêu đề: {{ post.title }}</p>\r\n        <p class=\"userDetail\">\r\n          Đăng bởi: {{ usernameHost }} - Thời gian:\r\n          {{ formatDate(post.postTime) }}\r\n        </p>\r\n        <p>Nội dung: {{ post.content }}</p>\r\n      </div>\r\n      <hr />\r\n      <div class=\"post-container\">\r\n        <label for=\"comment\">Bình luận:</label>\r\n        <textarea\r\n          class=\"form-control\"\r\n          rows=\"5\"\r\n          id=\"comment\"\r\n          name=\"text\"\r\n          placeholder=\"Nhập bình luận\"\r\n          v-model=\"content\"\r\n        ></textarea>\r\n        <Button class=\"btn-title btn btn-primary\" @click=\"addComment\">Gửi</Button>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n    <h4>Bình luận</h4>\r\n    <div v-if=\"!comment || comment.length === 0\">\r\n      <h1>Không có bình luận nào</h1>\r\n    </div>\r\n    <div v-else>\r\n      <div v-for=\"p in comment\" :key=\"p.id\" class=\"post-container\">\r\n        <div class=\"post-row\">\r\n            <div></div>\r\n          <p class=\"postDetail\"><strong>{{ p.userId.username }} - {{ formatDate(p.dateCreated) }}</strong></p> \r\n          <p>{{ p.content }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Apis, { authApi, endpoints } from \"@/configs/Apis\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: null,\r\n      usernameHost: null,\r\n      postId: null,\r\n      post: \"\",\r\n      comment: null,\r\n      content: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.postId = this.$route.params.id;\r\n\r\n    this.loadProduct();\r\n    this.loadComment();\r\n  },\r\n  methods: {\r\n    async loadProduct() {\r\n      const { data } = await Apis.get(endpoints.details(this.postId));\r\n      this.post = data;\r\n      console.log(this.post);\r\n      console.log(\"this.post.title\", this.post.title);\r\n\r\n      console.log(\"this.post.userId.id\", this.post.userId.id);\r\n\r\n      this.loadUser();\r\n    },\r\n    async loadUser() {\r\n      const userInfo = await authApi().get(\r\n        endpoints[\"user-id\"].replace(\"{id}\", this.post.userId.id)\r\n      );\r\n      this.usernameHost = userInfo.data.username;\r\n      console.log(\"this.usernameHost\", this.usernameHost);\r\n    },\r\n    async loadComment() {\r\n      const data = await authApi().get(\r\n        endpoints.comments.replace(\"{id}\", this.postId)\r\n      );\r\n      this.comment = data.data;\r\n    },\r\n    async addComment() {\r\n      const { data } = await authApi().post(endpoints[\"add-comment\"], {\r\n        content: this.content,\r\n        postId: this.post.id,\r\n      });\r\n      this.comment.push(data);\r\n      this.content = \"\";\r\n    },\r\n    formatDate(date) {\r\n      if (!date) return \"\"; // Tránh xử lý ngày null hoặc undefined\r\n\r\n      // Chuyển đối đối tượng ngày sang ngày\r\n      const formattedDate = new Date(date);\r\n\r\n      // Lấy thông tin về ngày, tháng và năm\r\n      const day = formattedDate.getDate();\r\n      const month = formattedDate.getMonth() + 1; // Lưu ý: Tháng bắt đầu từ 0\r\n      const year = formattedDate.getFullYear();\r\n\r\n      // Định dạng thành chuỗi \"ngày/tháng/năm\"\r\n      return `${day}/${month}/${year}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your CSS styles here */\r\n</style>\r\n\r\n\r\n"],"mappings":";AA2CA,OAAOA,IAAI,IAAIC,OAAO,EAAEC,SAAQ,QAAS,gBAAgB;AACzD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,YAAY,EAAE,IAAI;MAClBC,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,MAAK,GAAI,IAAI,CAACK,MAAM,CAACC,MAAM,CAACC,EAAE;IAEnC,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,WAAWA,CAAA,EAAG;MAClB,MAAM;QAAEX;MAAK,IAAI,MAAMH,IAAI,CAACiB,GAAG,CAACf,SAAS,CAACgB,OAAO,CAAC,IAAI,CAACZ,MAAM,CAAC,CAAC;MAC/D,IAAI,CAACC,IAAG,GAAIJ,IAAI;MAChBgB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,IAAI,CAAC;MACtBY,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACb,IAAI,CAACc,KAAK,CAAC;MAE/CF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACb,IAAI,CAACe,MAAM,CAACT,EAAE,CAAC;MAEvD,IAAI,CAACU,QAAQ,CAAC,CAAC;IACjB,CAAC;IACD,MAAMA,QAAQA,CAAA,EAAG;MACf,MAAMC,QAAO,GAAI,MAAMvB,OAAO,CAAC,CAAC,CAACgB,GAAG,CAClCf,SAAS,CAAC,SAAS,CAAC,CAACuB,OAAO,CAAC,MAAM,EAAE,IAAI,CAAClB,IAAI,CAACe,MAAM,CAACT,EAAE,CAC1D,CAAC;MACD,IAAI,CAACR,YAAW,GAAImB,QAAQ,CAACrB,IAAI,CAACuB,QAAQ;MAC1CP,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACf,YAAY,CAAC;IACrD,CAAC;IACD,MAAMU,WAAWA,CAAA,EAAG;MAClB,MAAMZ,IAAG,GAAI,MAAMF,OAAO,CAAC,CAAC,CAACgB,GAAG,CAC9Bf,SAAS,CAACyB,QAAQ,CAACF,OAAO,CAAC,MAAM,EAAE,IAAI,CAACnB,MAAM,CAChD,CAAC;MACD,IAAI,CAACE,OAAM,GAAIL,IAAI,CAACA,IAAI;IAC1B,CAAC;IACD,MAAMyB,UAAUA,CAAA,EAAG;MACjB,MAAM;QAAEzB;MAAK,IAAI,MAAMF,OAAO,CAAC,CAAC,CAACM,IAAI,CAACL,SAAS,CAAC,aAAa,CAAC,EAAE;QAC9DO,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBH,MAAM,EAAE,IAAI,CAACC,IAAI,CAACM;MACpB,CAAC,CAAC;MACF,IAAI,CAACL,OAAO,CAACqB,IAAI,CAAC1B,IAAI,CAAC;MACvB,IAAI,CAACM,OAAM,GAAI,EAAE;IACnB,CAAC;IACDqB,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE,EAAE;;MAEtB;MACA,MAAMC,aAAY,GAAI,IAAIC,IAAI,CAACF,IAAI,CAAC;;MAEpC;MACA,MAAMG,GAAE,GAAIF,aAAa,CAACG,OAAO,CAAC,CAAC;MACnC,MAAMC,KAAI,GAAIJ,aAAa,CAACK,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC5C,MAAMC,IAAG,GAAIN,aAAa,CAACO,WAAW,CAAC,CAAC;;MAExC;MACA,OAAQ,GAAEL,GAAI,IAAGE,KAAM,IAAGE,IAAK,EAAC;IAClC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}