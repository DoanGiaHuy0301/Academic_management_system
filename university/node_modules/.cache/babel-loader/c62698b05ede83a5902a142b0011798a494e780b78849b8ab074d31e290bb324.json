{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Apis, { authApi, endpoints } from '@/configs/Apis.js';\nimport { useMenu } from \"../../../stores/use-menu.js\";\nexport default {\n  setup() {\n    useMenu().onSelectedKeys([\"teacher-forum\"]);\n  },\n  data() {\n    return {\n      isEditMode: false,\n      post: [],\n      title: \"\",\n      content: \"\",\n      currentPage: 1,\n      postsPerPage: 6,\n      searchKeyword: \"\"\n    };\n  },\n  computed: {\n    indexOfLastPost() {\n      return this.currentPage * this.postsPerPage;\n    },\n    indexOfFirstPost() {\n      return this.indexOfLastPost - this.postsPerPage;\n    },\n    currentPosts() {\n      return this.post.filter(p => p.title.toLowerCase().includes(this.searchKeyword.toLowerCase()) || p.content.toLowerCase().includes(this.searchKeyword.toLowerCase())).slice(this.indexOfFirstPost, this.indexOfLastPost);\n    },\n    pageNumbers() {\n      const pageNumbers = [];\n      for (let i = 1; i <= Math.ceil(this.post.length / this.postsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n      return pageNumbers;\n    }\n  },\n  created() {\n    this.loadPost;\n  },\n  methods: {\n    handleEdit() {\n      this.isEditMode = true;\n    },\n    exitHandleEdit() {\n      this.isEditMode = false;\n    },\n    async loadPost() {\n      try {\n        const response = await Apis.get(endpoints[\"posts\"], {\n          params: {\n            kw: this.searchKeyword\n          }\n        });\n        this.post = response.data;\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error loading posts:\", error);\n      }\n    },\n    handleSearch() {\n      console.log(\"searchKeyword:\", this.searchKeyword);\n      this.loadPost();\n    },\n    async handlePostSubmit() {\n      try {\n        const response = await authApi().post(endpoints[add - post], {\n          title: this.title,\n          content: this.content\n        });\n        this.post.push(response.data);\n        this.title = \"\";\n        this.content = \"\";\n        this.isEditMode = false;\n      } catch (error) {\n        console.error(\"Error submitting post:\", error);\n      }\n    },\n    formatDate(date) {\n      if (!date) return \"\"; // Tránh xử lý ngày null hoặc undefined\n\n      // Chuyển đối đối tượng ngày sang ngày\n      const formattedDate = new Date(date);\n\n      // Lấy thông tin về ngày, tháng và năm\n      const day = formattedDate.getDate();\n      const month = formattedDate.getMonth() + 1; // Lưu ý: Tháng bắt đầu từ 0\n      const year = formattedDate.getFullYear();\n\n      // Định dạng thành chuỗi \"ngày/tháng/năm\"\n      return `${day}/${month}/${year}`;\n    }\n  },\n  watch: {\n    searchKeyword: \"loadPost\"\n  }\n};","map":{"version":3,"names":["Apis","authApi","endpoints","useMenu","setup","onSelectedKeys","data","isEditMode","post","title","content","currentPage","postsPerPage","searchKeyword","computed","indexOfLastPost","indexOfFirstPost","currentPosts","filter","p","toLowerCase","includes","slice","pageNumbers","i","Math","ceil","length","push","created","loadPost","methods","handleEdit","exitHandleEdit","response","get","params","kw","console","log","error","handleSearch","handlePostSubmit","add","formatDate","date","formattedDate","Date","day","getDate","month","getMonth","year","getFullYear","watch"],"sources":["D:\\university\\src\\pages\\teacher\\forum\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 d-flex justify-content-end\">\r\n        <form class=\"d-flex\">\r\n          <input\r\n            class=\"form-control me-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            v-model=\"searchKeyword\"\r\n          />\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            style=\"width: 150px\"\r\n            @click=\"handleSearch\"\r\n          >\r\n            Tìm kiếm\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"post-container\" v-if=\"isEditMode\">\r\n        <label for=\"comment\">Tiêu đề:</label>\r\n        <textarea\r\n          class=\"form-control\"\r\n          rows=\"1\"\r\n          id=\"comment\"\r\n          name=\"text\"\r\n          placeholder=\"Nhập tiêu đề bài viết\"\r\n          v-model=\"title\"\r\n        ></textarea>\r\n        <label for=\"comment\">Nội dung:</label>\r\n        <textarea\r\n          class=\"form-control\"\r\n          rows=\"5\"\r\n          id=\"comment\"\r\n          name=\"text\"\r\n          placeholder=\"Nhập nội dung bài viết\"\r\n          v-model=\"content\"\r\n        ></textarea>\r\n        <Button class=\"btn-title btn btn-primary\" @click=\"handlePostSubmit\"\r\n          >Đăng</Button\r\n        >\r\n        <Button class=\"btn-title btn btn-primary\">Hủy</Button>\r\n        <Button class=\"btn-title btn btn-primary\" @click=\"exitHandleEdit\"\r\n          >Thoát</Button\r\n        >\r\n      </div>\r\n      <div class=\"col-3 post-container\" v-else>\r\n        <Button class=\"btn-title btn btn-primary\" @click=\"handleEdit\"\r\n          >Đăng bài viết</Button\r\n        >\r\n      </div>\r\n      <table class=\"table\" v-if=\"post.length > 0\">\r\n        <thead>\r\n          <tr>\r\n            <th>Tên bài post</th>\r\n            <th>Người đăng</th>\r\n            <th>Thời gian đăng</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"p in currentPosts\" :key=\"p.id\">\r\n            <td>\r\n              <router-link :to=\"'/posts/' + p.id\" class=\"post-link\">\r\n                {{ p.title }}\r\n              </router-link>\r\n            </td>\r\n            <td>{{ p.userId.username }}</td>\r\n            <td>{{ formatDate(p.postTime) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <pagination\r\n        :total-pages=\"pageNumbers.length\"\r\n        :current-page=\"currentPage\"\r\n        @page-click=\"setCurrentPage\"\r\n      ></pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Apis, { authApi, endpoints } from '@/configs/Apis.js';\r\nimport { useMenu } from \"../../../stores/use-menu.js\";\r\nexport default {\r\n  setup() {\r\n    useMenu().onSelectedKeys([\"teacher-forum\"]);\r\n  },\r\n  data() {\r\n    return {\r\n      isEditMode: false,\r\n      post: [],\r\n      title: \"\",\r\n      content: \"\",\r\n      currentPage: 1,\r\n      postsPerPage: 6,\r\n      searchKeyword: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    indexOfLastPost() {\r\n      return this.currentPage * this.postsPerPage;\r\n    },\r\n    indexOfFirstPost() {\r\n      return this.indexOfLastPost - this.postsPerPage;\r\n    },\r\n    currentPosts() {\r\n      return this.post\r\n        .filter(\r\n          (p) =>\r\n            p.title.toLowerCase().includes(this.searchKeyword.toLowerCase()) ||\r\n            p.content.toLowerCase().includes(this.searchKeyword.toLowerCase())\r\n        )\r\n        .slice(this.indexOfFirstPost, this.indexOfLastPost);\r\n    },\r\n    pageNumbers() {\r\n      const pageNumbers = [];\r\n      for (\r\n        let i = 1;\r\n        i <= Math.ceil(this.post.length / this.postsPerPage);\r\n        i++\r\n      ) {\r\n        pageNumbers.push(i);\r\n      }\r\n      return pageNumbers;\r\n    },\r\n  },\r\n  created() {\r\n    this.loadPost;\r\n  },\r\n  methods: {\r\n    handleEdit() {\r\n      this.isEditMode = true;\r\n    },\r\n    exitHandleEdit() {\r\n      this.isEditMode = false;\r\n    },\r\n    async loadPost() {\r\n      try {\r\n        const response = await Apis.get(endpoints[\"posts\"], {\r\n          params: { kw: this.searchKeyword },\r\n        });\r\n        this.post = response.data;\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error loading posts:\", error);\r\n      }\r\n    },\r\n    handleSearch() {\r\n      console.log(\"searchKeyword:\", this.searchKeyword);\r\n      this.loadPost();\r\n    },\r\n    async handlePostSubmit() {\r\n      try {\r\n        const response = await authApi().post(endpoints[add-post], {\r\n          title: this.title,\r\n          content: this.content,\r\n        });\r\n        this.post.push(response.data);\r\n        this.title = \"\";\r\n        this.content = \"\";\r\n        this.isEditMode = false;\r\n      } catch (error) {\r\n        console.error(\"Error submitting post:\", error);\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      if (!date) return \"\"; // Tránh xử lý ngày null hoặc undefined\r\n\r\n      // Chuyển đối đối tượng ngày sang ngày\r\n      const formattedDate = new Date(date);\r\n\r\n      // Lấy thông tin về ngày, tháng và năm\r\n      const day = formattedDate.getDate();\r\n      const month = formattedDate.getMonth() + 1; // Lưu ý: Tháng bắt đầu từ 0\r\n      const year = formattedDate.getFullYear();\r\n\r\n      // Định dạng thành chuỗi \"ngày/tháng/năm\"\r\n      return `${day}/${month}/${year}`;\r\n    },\r\n  },\r\n  watch: {\r\n    searchKeyword: \"loadPost\",\r\n  },\r\n};\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}